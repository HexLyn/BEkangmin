<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- MyBatis 매퍼 설정 파일 -->
<mapper namespace="com.be.portfolio.mapper.PortfolioMapper">

    <select id="getPortfolioItemList" resultType="com.be.portfolio.domain.PortfolioItemVO">
        select pi.portfolioitemID, pi.portfolioID, pi.productID, pi.stockCode, pi.amount, pi.expectedReturn, p.productType, s.dailyPrice from portfolioitem pi
            left outer join product p
                on pi.productID = p.productID
            left outer join stockCode s
        where portfolioID = #{portfolioID}
    </select>
    <select id="getPortfolio" resultType="com.be.portfolio.domain.PortfolioVO">
        select * from portfolio
        where portfolioID = #{portfolioID}
    </select>
    <select id="getAllIds" resultType="java.lang.Integer">
        select portfolioID from portfolio;
    </select>
    <insert id="insertPortfolio">
        insert into portfolio(creationDate, total, expectedReturn, riskLevel, portfolioName, userNum)
        values(#{creationDate}, #{total}, #{expectedReturn}, #{riskLevel}, #{portfolioName}, #{userNum})
        select last_insert_id();
    </insert>
    <insert id="insertPortfolioItem">
        insert into portfolio(portfolioID, productID, stockCode, amount, expectedReturn)
        values(#{portfolioID}, #{productId}, #{stockCode}, #{amount}, #{expectedReturn})
    </insert>
    <update id="updatePortfolio">
        update portfolio set total=#{total}, expectedReturn=#{expectedReturn}, riskLevel=#{riskLevel}, update_date=now() where portfolioID=#{portfolioID}
    </update>
    <delete id="deletePortfolio">
        delete from portfolio
        where portfolioID = #{portfolioID}
    </delete>
    <delete id="deletePortfolioItem">
        delete from portfolioItem
        where portfolioID = #{portfolioID}
    </delete>
</mapper>